0x0 VARIABLE index_start
0x0 VARIABLE index_end
0x0 VARIABLE massive_index
0x0 VARIABLE dop_var
0x0 VARIABLE mass_exit
0x0 VARIABLE mass_exit2
_start:
    in 0
    lit 48  ; чтобы сделать нормальное количество букв (паскаль строкой)
    call rep
    dup
    lit index_end
    swap
    !
    !
    lit dop_var
    lit 0
    !
while:
    in 0
    lit index_start
    @
    lit index_end
    @       ; это нужно чтобы найти число, которое прибавить к адресу
    -
    lit massive_index   ; адрес массива
    +
    swap
    !
    lit index_start
    @
    lit 1
    call rep
    dup
    if next
    !
    lit dop_var
    dup
    @
    lit index_end
    +
    jump while
rep:
    swap
    -
    lit index_start
    swap
    ret
next:
    lit index_end
    @
    lit index_start
    swap
    !
repeat:
    lit mass_exit
    @
    lit 1
    +
    lit index_start
    @
    -
    if check
    call get_nums
    swap
    >
    dup
    if swap_nums
    lit mass_exit2
    @
    +
    lit mass_exit2
    swap
    !
    jump continue
continue:
    lit mass_exit
    dup
    @
    lit 1
    +
    !
    jump repeat
swap_nums:
    call get_nums
    swap
    call get_addr
    swap
    !
    call get_addr
    lit 1
    +
    swap
    !
    jump continue
get_addr:
    lit massive_index   ; адрес массива
    lit mass_exit
    @
    +
    ret
get_nums:
    call get_addr
    dup
    lit 1
    +
    @
    swap
    @
    ret
check:
    lit mass_exit2
    @
    lit 1
    +
    lit index_start
    @
    -
    if end
    lit mass_exit2
    lit 0
    !
    lit mass_exit
    lit 0
    !
    jump repeat
end:
    lit index_end
    lit 0
    !
while_end:
    lit massive_index
    lit index_end @ + @
    out 2
    lit index_end
    dup
    @
    lit 1 +
    !
    lit index_end @
    lit index_start @
    -
    if end_halt
    lit 32
    out 2
    jump while_end
end_halt:
    halt