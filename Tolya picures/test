`drop` – Удаляет верхний элемент стека. <br>
`dup` – Дублирует верхний элемент стека. <br>
`swap` – Меняет местами два верхних элемента стека. <br>
`+` – Складывает два верхних элемента стека. <br>
`-` – Вычитает верхний элемент из второго. <br>
`*` – Умножает два верхних элемента. <br>
`/` – Делит второй элемент на верхний. <br>
`mod` – Остаток от деления второго элемента на верхний. <br>
`negate` – Инвертирует знак верхнего элемента. <br>
`=` – Проверяет равенство двух верхних элементов, кладет -1 (истина) или 0 (ложь).<br>
`<` – Проверяет, меньше ли второй элемент, чем верхний.<br>
`>` – Проверяет, больше ли второй элемент, чем верхний.<br>
`and` – Побитовая операция И для двух верхних элементов.<br>
`or` – Побитовая операция ИЛИ для двух верхних элементов.<br>
`xor` – Побитовая операция Исключающее ИЛИ.<br>
`invert` – Инвертирует все биты верхнего элемента.<br>
`if {address}` – Условное выполнение: если верхний элемент стека не 0, выполняет код между IF и THEN.<br>
`!` – Записывает значение во вторую ячейку памяти (addr value !).<br>
`@` – Читает значение из памяти (addr @).<br>
`in {port}` – Считывает один символ с клавиатуры и кладет его код в стек.<br>
`halt` – остановка тактового генератора.<br>
`lit {value}` – Загрузка литерала в вершину стека.<br>
`out {port}` – Загрузка вершины стека в буфер вывода.<br>
`jump {address}` – Переход на метку.<br>
`call {address}` – Вызов процедуры.<br>
`ret` – Возвращение из процедуры.<br>
`c` – Загрузить значение Carry-flag в стек.<br>